{"version":3,"sources":["components/BackButton/BackButton.js","components/Card/Card.js","components/Modal/Modal.js","components/ColorSelectButton/ColorSelectButton.js","page/ModalPage/ModalPage.js","components/TextButton/TextButton.js","components/Input/Input.js","components/InputContainer/InputContainer.js","page/CardAddPage/CardNumberInput.js","page/CardAddPage/CardExpirationInput.js","page/CardAddPage/CardOwnerNameInput.js","components/Tooltip/Tooltip.js","page/CardAddPage/CardSecurityCodeInput.js","page/CardAddPage/CardPasswordInput.js","page/CardAddPage/CardAddPage.js","components/UnderLineInput/UnderLineInput.js","page/CardRegisterPage/CardRegisterPage.js","utils/validator.js","App.js","index.js"],"names":["BackButton","className","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","Card","props","size","name","expiration","cardCompany","cardNumbers","small","middle","large","color","Array","from","length","map","_","index","numbers","currentKey","Object","keys","repeat","Modal","role","aria-modal","aria-label","children","ColorSelectButton","company","onClick","data-company","ModalPage","TextButton","text","type","Input","min","max","minLength","required","value","placeholder","onChange","disabled","maxLength","InputContainer","title","bgColor","count","CardNumberInput","handleCardNumbersInput","Fragment","e","CardExpirationInput","handleExpirationInput","month","year","CardOwnerNameInput","ownerName","handleOwnerNameInput","Tooltip","innerText","content","useState","isShowTooltip","setIsShowTooltip","CardSecurityCodeInput","securityCode","handleSecurityCodeInput","src","alt","CardPasswordInput","password","handlePasswordInput","CardAddPage","isModalOpened","handleCardCompany","handleCardInfoSubmit","onSubmit","UnderLineInput","CardRegisterPage","resetState","setCardName","preventDefault","target","elements","isNumber","test","Number","App","setCardCompany","setExpiration","setOwnerName","setSecurityCode","first","second","setPassword","third","fourth","setCardNumbers","setIsModalOpened","isAllValid","setIsAllValid","useEffect","key","trim","closest","dataset","category","valueAsString","String","replace","trimStart","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a999e51.chunk.js","sourcesContent":["import React from 'react';\n\nconst BackButton = () => {\n  return (\n    <button className=\"h-4 w-4\">\n      <svg width=\"17\" height=\"17\" viewBox=\"0 0 17 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M8.30426 1L1.36476 8.78658L9.15134 15.7261\" stroke=\"#525252\" strokeWidth=\"1.5\" />\n      </svg>\n    </button>\n  );\n};\n\nexport default BackButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Card = (props) => {\n  const { size = 'middle', name = 'NAME', expiration, cardCompany, cardNumbers } = props;\n\n  const sizeTable = {\n    small: 'w-208 h-130',\n    middle: 'w-213 h-133',\n    large: 'w-293 h-183',\n  };\n\n  const heightTable = {\n    small: 'h-5',\n    middle: 'h-5',\n    large: 'h-10',\n  };\n\n  const changeSecurityCode = (numbers) => {\n    return '*'.repeat(numbers.length);\n  };\n\n  return (\n    <div\n      className={`${sizeTable[size]} px-4 py-2 rounded-xl bg-gray-350 ${cardCompany.color} shadow-lg font-mono tracking-wide`}\n    >\n      <span className={`${size === 'large' ? 'text-sm' : 'text-xxs'} inline-block text-black-500`}>\n        {cardCompany.name}\n      </span>\n      <div className={`w-1/5 h-1/5 ${size === 'large' ? 'mt-8' : 'mt-4'} rounded-md bg-yellow-450`}></div>\n      <ul className={`flex mt-3 text-sm ${heightTable[size]} items-center mx-1`}>\n        {Array.from({ length: 4 }).map((_, index) => {\n          const currentKey = Object.keys(cardNumbers)[index];\n          return (\n            <li\n              key={`cardNumber-${currentKey}`}\n              className={`${size === 'large' ? 'text-lg mr-9' : 'text-sm mr-3'} text-black-700 w-8`}\n            >\n              <div>{index > 1 ? changeSecurityCode(cardNumbers[currentKey]) : cardNumbers[currentKey]}</div>\n            </li>\n          );\n        })}\n      </ul>\n      <div className={`flex justify-between ${size === 'large' ? 'text-base' : 'text-xs'} text-black-700 mt-1 mx-0.5`}>\n        <div>{name}</div>\n        <div>{expiration}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n\nCard.propTypes = {\n  size: PropTypes.string,\n  name: PropTypes.string,\n  expiration: PropTypes.string,\n  cardCompany: PropTypes.object,\n  cardNumbers: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Modal = (props) => {\n  return (\n    <section\n      className=\"max-w-375 max-h-701 mt-5 p-5 mx-auto flex fixed inset-0 z-10 bg-gray-400 bg-opacity-70 rounded-3xl\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-label=\"카드사 선택 modal\"\n    >\n      <div\n        className={`absolute flex items-center p-7 rounded-3xl rounded-b-none bg-white left-0 bottom-0 \n        ${props.width || 'w-full'} ${props.height || 'h-227'}`}\n      >\n        {props.children}\n      </div>\n    </section>\n  );\n};\n\nexport default Modal;\n\nModal.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ColorSelectButton = (props) => {\n  const { company, onClick } = props;\n\n  return (\n    <li className=\"mt-4 list-none\" onClick={onClick} data-company={company}>\n      <button className=\"flex flex-col justify-center items-center text-center h-16 w-16\">\n        <div className={`w-10 h-10 rounded-full justify-center bg-${company}`}></div>\n        <span className=\"mt-1 text-xs text-black-700\">{`${company} 카드`}</span>\n      </button>\n    </li>\n  );\n};\n\nexport default ColorSelectButton;\n\nColorSelectButton.propTypes = {\n  company: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../../components/Modal/Modal';\nimport ColorSelectButton from '../../components/ColorSelectButton/ColorSelectButton';\n\nconst ModalPage = (props) => {\n  const { onClick } = props;\n  const cardCompanies = ['포코', '준', '공원', '로이드', '티케', '은현', '유조', '윤호'];\n\n  return (\n    <Modal>\n      <ul className=\"flex flex-wrap justify-around h-full\">\n        {cardCompanies.map((company) => (\n          <ColorSelectButton key={company} company={company} onClick={onClick} />\n        ))}\n      </ul>\n    </Modal>\n  );\n};\n\nexport default ModalPage;\n\nModalPage.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextButton = (props) => {\n  const { text, type = 'submit', color = 'text-green-350' } = props;\n\n  return (\n    <button type={type} className={`absolute right-10 ${color} font-bold`}>\n      {text}\n    </button>\n  );\n};\n\nexport default TextButton;\n\nTextButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Input = (props) => {\n  const {\n    type = 'text',\n    name = '',\n    min,\n    max,\n    minLength,\n    length,\n    required = true,\n    value,\n    placeholder = '',\n    onChange,\n    className = '',\n    disabled = false,\n  } = props;\n\n  return (\n    <input\n      type={type}\n      name={name}\n      min={min}\n      max={max}\n      minLength={minLength ?? length}\n      maxLength={length}\n      placeholder={placeholder}\n      value={value}\n      className={`bg-gray-250 text-green-350 h-10 w-full text-left outline-none focus:border border-gray-400 rounded ${className}`}\n      required={required}\n      onChange={onChange}\n      disabled={disabled}\n    />\n  );\n};\n\nexport default Input;\n\nInput.propTypes = {\n  min: PropTypes.number,\n  max: PropTypes.number,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  textAlign: PropTypes.string,\n  length: PropTypes.number,\n  onChange: PropTypes.func,\n  disabled: PropTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst InputContainer = (props) => {\n  const { title, children, width, bgColor = '', count = false } = props;\n\n  return (\n    <div className=\"flex w-full flex-col mt-5\">\n      <div className=\"flex justify-between items-center\">\n        <label className=\"text-xs \">{title}</label>\n        <span className=\"mr-1 text-xs\">{count || count === 0 ? `${count}/30` : ''}</span>\n      </div>\n      <div className={`${width} flex items-center mt-1.5 font-gray-350 ${bgColor} rounded`}>{children}</div>\n    </div>\n  );\n};\n\nexport default InputContainer;\n\nInputContainer.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","import React from 'react';\nimport Input from '../../components/Input/Input';\nimport InputContainer from '../../components/InputContainer/InputContainer';\nimport PropTypes from 'prop-types';\n\nconst CardNumberInput = (props) => {\n  const { cardNumbers, handleCardNumbersInput } = props;\n\n  return (\n    <InputContainer title={'카드 번호'} bgColor={'bg-gray-250'} width={'w-full'}>\n      <>\n        {Array.from({ length: 4 }).map((_, index) => {\n          const currentKey = Object.keys(cardNumbers)[index];\n          return (\n            <React.Fragment key={`cardNumber-${currentKey}`}>\n              <Input\n                type={index > 1 ? 'password' : 'text'}\n                length={4}\n                placeholder={'0000'}\n                value={cardNumbers[currentKey]}\n                onChange={(e) => handleCardNumbersInput(e, currentKey)}\n                className={'px-3.5 text-center'}\n              />\n              {index === 3 ? '' : <span>-</span>}\n            </React.Fragment>\n          );\n        })}\n      </>\n    </InputContainer>\n  );\n};\n\nexport default CardNumberInput;\n\nCardNumberInput.propTypes = {\n  cardNumbers: PropTypes.object.isRequired,\n  handleCardNumbersInput: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport Input from '../../components/Input/Input';\nimport InputContainer from '../../components/InputContainer/InputContainer';\nimport PropTypes from 'prop-types';\n\nconst CardExpirationInput = (props) => {\n  const { expiration, handleExpirationInput } = props;\n\n  return (\n    <InputContainer title={'만료일'} width={'w-5/12'} bgColor={'bg-gray-250'}>\n      <>\n        <Input\n          placeholder={'MM'}\n          type={'number'}\n          min={1}\n          max={12}\n          value={expiration.month}\n          onChange={(e) => handleExpirationInput(e, 'month')}\n          className={'text-center pl-4'}\n        />\n        <span className=\"text-gray-400 \">/</span>\n        <Input\n          placeholder={'YY'}\n          type={'number'}\n          min={21}\n          value={expiration.year}\n          onChange={(e) => handleExpirationInput(e, 'year')}\n          className={'text-center pr-4'}\n        />\n      </>\n    </InputContainer>\n  );\n};\n\nexport default CardExpirationInput;\n\nCardExpirationInput.propTypes = {\n  expiration: PropTypes.object.isRequired,\n  handleExpirationInput: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport Input from '../../components/Input/Input';\nimport InputContainer from '../../components/InputContainer/InputContainer';\nimport PropTypes from 'prop-types';\n\nconst CardOwnerNameInput = (props) => {\n  const { ownerName, handleOwnerNameInput } = props;\n\n  return (\n    <InputContainer title={'카드 소유자 이름(선택)'} bgColor={'bg-gray-250'} count={ownerName.length} width={'w-full'}>\n      <Input\n        minLength={0}\n        length={30}\n        placeholder={'카드에 표시된 이름과 동일하게 입력하세요.'}\n        value={ownerName}\n        onChange={handleOwnerNameInput}\n        required={false}\n        className={'px-4'}\n      />\n    </InputContainer>\n  );\n};\n\nexport default CardOwnerNameInput;\n\nCardOwnerNameInput.propTypes = {\n  ownerName: PropTypes.string.isRequired,\n  handleOwnerNameInput: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Tooltip = (props) => {\n  const { innerText = '?', content } = props;\n  const [isShowTooltip, setIsShowTooltip] = useState(false);\n\n  const handleToggleTooltip = () => {\n    setIsShowTooltip(!isShowTooltip);\n  };\n\n  return (\n    <div className=\"relative\">\n      <button\n        type=\"button\"\n        className=\"w-6 h-6  ml-2 flex justify-center items-center rounded-full ring-1 ring-gray-400 text-lg text-gray-400 focus:outline-none\"\n        onClick={handleToggleTooltip}\n      >\n        {innerText}\n      </button>\n      {isShowTooltip && (\n        <div className=\"ring-1 rounded-2xl rounded-tl-none ring-gray-400 w-24 absolute left-7 top-4 bg-gray-100\">\n          {content}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Tooltip;\nTooltip.propTypes = {\n  innerText: PropTypes.string,\n  content: PropTypes.element.isRequired,\n};\n","import React from 'react';\nimport Input from '../../components/Input/Input';\nimport InputContainer from '../../components/InputContainer/InputContainer';\nimport Tooltip from '../../components/Tooltip/Tooltip';\nimport PropTypes from 'prop-types';\n\nconst CardSecurityCodeInput = (props) => {\n  const { securityCode, handleSecurityCodeInput } = props;\n\n  return (\n    <InputContainer title={'보안코드(CVC/CVV)'} width={'w-1/3'}>\n      <>\n        <Input\n          type={'password'}\n          length={3}\n          value={securityCode}\n          className={'px-4 text-center'}\n          onChange={handleSecurityCodeInput}\n        />\n        <Tooltip content={<img src=\"images/CVC.png\" alt=\"카드 뒷면 서명란 끝의 세자리 숫자입니다.\" />} />\n      </>\n    </InputContainer>\n  );\n};\n\nexport default CardSecurityCodeInput;\n\nCardSecurityCodeInput.propTypes = {\n  securityCode: PropTypes.string.isRequired,\n  handleSecurityCodeInput: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport Input from '../../components/Input/Input';\nimport InputContainer from '../../components/InputContainer/InputContainer';\nimport PropTypes from 'prop-types';\n\nconst CardPasswordInput = (props) => {\n  const { password, handlePasswordInput } = props;\n\n  return (\n    <InputContainer title={'카드 비밀번호'} width={'w-7/12'}>\n      <>\n        {Array.from({ length: 4 }).map((_, index) => {\n          const currentKey = Object.keys(password)[index] ?? '';\n          return (\n            <Input\n              key={index}\n              className={`mr-1.5 text-center ${index > 1 && 'bg-opacity-0'}`}\n              width={'small'}\n              type={'password'}\n              length={1}\n              name={currentKey ?? ''}\n              value={password[currentKey] ?? '*'}\n              onChange={handlePasswordInput}\n            />\n          );\n        })}\n      </>\n    </InputContainer>\n  );\n};\n\nexport default CardPasswordInput;\n\nCardPasswordInput.propTypes = {\n  password: PropTypes.object.isRequired,\n  handlePasswordInput: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nimport BackButton from '../../components/BackButton/BackButton';\nimport Card from '../../components/Card/Card';\nimport ModalPage from '../ModalPage/ModalPage';\nimport TextButton from '../../components/TextButton/TextButton';\n\nimport CardNumberInput from './CardNumberInput';\nimport CardExpirationInput from './CardExpirationInput';\nimport CardOwnerNameInput from './CardOwnerNameInput';\nimport CardSecurityCodeInput from './CardSecurityCodeInput';\nimport CardPasswordInput from './CardPasswordInput';\nimport PropTypes from 'prop-types';\n\nconst CardAddPage = (props) => {\n  const {\n    cardNumbers,\n    cardCompany,\n    expiration,\n    ownerName,\n    securityCode,\n    password,\n    isModalOpened,\n    handleCardNumbersInput,\n    handleCardCompany,\n    handleExpirationInput,\n    handleOwnerNameInput,\n    handleSecurityCodeInput,\n    handlePasswordInput,\n    handleCardInfoSubmit,\n  } = props;\n\n  return (\n    <div className=\"p-5\">\n      <div className=\"flex items-center\">\n        <BackButton />\n        <h1 className=\"text-xl ml-4\">카드 추가</h1>\n      </div>\n\n      <div className=\"flex justify-center my-7\">\n        <Card\n          name={ownerName || 'NAME'}\n          expiration={`${expiration.month || 'MM'}/${expiration.year || 'YY'}`}\n          cardCompany={cardCompany}\n          cardNumbers={cardNumbers}\n        />\n      </div>\n\n      <form onSubmit={handleCardInfoSubmit}>\n        <CardNumberInput cardNumbers={cardNumbers} handleCardNumbersInput={handleCardNumbersInput} />\n        <CardExpirationInput expiration={expiration} handleExpirationInput={handleExpirationInput} />\n        <CardOwnerNameInput ownerName={ownerName} handleOwnerNameInput={handleOwnerNameInput} />\n        <CardSecurityCodeInput securityCode={securityCode} handleSecurityCodeInput={handleSecurityCodeInput} />\n        <CardPasswordInput password={password} handlePasswordInput={handlePasswordInput} />\n        <TextButton text={'다음'} />\n      </form>\n\n      {isModalOpened && <ModalPage onClick={handleCardCompany} />}\n    </div>\n  );\n};\nexport default CardAddPage;\n\nCardAddPage.propTypes = {\n  cardNumbers: PropTypes.object.isRequired,\n  cardCompany: PropTypes.object.isRequired,\n  expiration: PropTypes.object.isRequired,\n  ownerName: PropTypes.string,\n  securityCode: PropTypes.string.isRequired,\n  password: PropTypes.object.isRequired,\n  isModalOpened: PropTypes.bool.isRequired,\n  handleCardNumbersInput: PropTypes.func.isRequired,\n  handleCardCompany: PropTypes.func.isRequired,\n  handleExpirationInput: PropTypes.func.isRequired,\n  handleOwnerNameInput: PropTypes.func.isRequired,\n  handleSecurityCodeInput: PropTypes.func.isRequired,\n  handlePasswordInput: PropTypes.func.isRequired,\n  handleCardInfoSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst UnderLineInput = (props) => {\n  const { name } = props;\n\n  return (\n    <input\n      type=\"text\"\n      placeholder=\"카드 이름을 입력해주세요.\"\n      maxLength={10}\n      className=\"border-b border-black-500 w-3/4 text-center outline-none\t\"\n      name={name}\n    />\n  );\n};\n\nexport default UnderLineInput;\n\nUnderLineInput.propTypes = {\n  name: PropTypes.string,\n};\n","import React from 'react';\nimport Card from '../../components/Card/Card';\nimport UnderLineInput from '../../components/UnderLineInput/UnderLineInput';\nimport TextButton from '../../components/TextButton/TextButton';\nimport PropTypes from 'prop-types';\n\nconst CardRegisterPage = (props) => {\n  const { cardCompany, cardNumbers, expiration, ownerName, resetState, setCardName } = props;\n\n  const handleCardSubmit = (e) => {\n    e.preventDefault();\n\n    const { value } = e.target.elements['cardName'];\n    setCardName(value);\n    resetState();\n  };\n\n  return (\n    <form className=\"h-full p-5 flex flex-col items-center\" onSubmit={handleCardSubmit}>\n      <h1 className=\"mt-20 text-2xl text-gray-600\">카드 등록이 완료되었습니다.</h1>\n      <div className=\"mt-20 mb-10\">\n        <Card\n          size={'large'}\n          name={ownerName || 'NAME'}\n          expiration={`${expiration.month || 'MM'}/${expiration.year || 'YY'}`}\n          cardCompany={cardCompany}\n          cardNumbers={cardNumbers}\n        />\n      </div>\n      <UnderLineInput name={'cardName'} />\n      <div className=\"mt-40\">\n        <TextButton text={'완료'} />\n      </div>\n    </form>\n  );\n};\n\nexport default CardRegisterPage;\n\nCardRegisterPage.propTypes = {\n  cardCompany: PropTypes.object.isRequired,\n  cardNumbers: PropTypes.object.isRequired,\n  expiration: PropTypes.object.isRequired,\n  ownerName: PropTypes.string,\n  resetState: PropTypes.func.isRequired,\n  setCardName: PropTypes.func.isRequired,\n};\n","export const isNumber = (value) => {\n  const numberReg = /^[0-9]/gi;\n\n  if (!numberReg.test(Number(value))) {\n    return false;\n  }\n  return true;\n};\n","import React, { useEffect, useState } from 'react';\nimport CardAddPage from './page/CardAddPage/CardAddPage';\nimport CardRegisterPage from './page/CardRegisterPage/CardRegisterPage';\nimport { isNumber } from './utils/validator';\n\nfunction App() {\n  const [cardCompany, setCardCompany] = useState({ name: '', color: '' });\n  const [expiration, setExpiration] = useState({ month: '', year: '' });\n  const [ownerName, setOwnerName] = useState('');\n  const [securityCode, setSecurityCode] = useState('');\n  const [password, setPassword] = useState({\n    first: '',\n    second: '',\n  });\n  const [cardNumbers, setCardNumbers] = useState({\n    first: '',\n    second: '',\n    third: '',\n    fourth: '',\n  });\n  const [isModalOpened, setIsModalOpened] = useState(false);\n  const [isAllValid, setIsAllValid] = useState(false);\n  const [cardName, setCardName] = useState('');\n\n  const resetState = () => {\n    setCardCompany({ name: '', color: '' });\n    setExpiration({ month: '', year: '' });\n    setOwnerName('');\n    setSecurityCode('');\n    setPassword({\n      first: '',\n      second: '',\n    });\n    setCardNumbers({\n      first: '',\n      second: '',\n      third: '',\n      fourth: '',\n    });\n    setIsModalOpened(false);\n    setIsAllValid(false);\n  };\n\n  const handleCardNumbersInput = ({ target: { value } }, key) => {\n    isNumber(value) && setCardNumbers({ ...cardNumbers, [key]: value.trim() });\n  };\n\n  const handleCardCompany = ({ target }) => {\n    const company = target.closest('li').dataset.company;\n\n    setCardCompany({\n      name: `${company} 카드`,\n      color: `bg-${company}`,\n    });\n    setIsModalOpened(false);\n  };\n\n  useEffect(() => {\n    if (cardNumbers.first.length + cardNumbers.second.length === 8 && !cardCompany.name) {\n      setIsModalOpened(true);\n    }\n  }, [cardNumbers, cardCompany]);\n\n  const handleExpirationInput = ({ target: { value } }, category) => {\n    const valueAsString = String(value);\n\n    if (valueAsString.length > 2) {\n      return;\n    }\n\n    setExpiration({\n      ...expiration,\n      [category]: valueAsString.replace(/[^0-9]s/g, ''),\n    });\n  };\n\n  const handleOwnerNameInput = ({ target: { value } }) => {\n    setOwnerName(value.trimStart());\n  };\n\n  const handleSecurityCodeInput = ({ target: { value } }) => {\n    isNumber(value) && setSecurityCode(value.trim());\n  };\n\n  const handlePasswordInput = ({ target: { value, name } }) => {\n    isNumber(value) && setPassword({ ...password, [name]: value.trim() });\n  };\n\n  const handleCardInfoSubmit = (e) => {\n    e.preventDefault();\n\n    setIsAllValid(true);\n  };\n\n  return (\n    <div className=\"relative max-w-375 mt-5 p-5 mx-auto bg-white rounded-3xl\">\n      {!isAllValid ? (\n        <CardAddPage\n          cardNumbers={cardNumbers}\n          cardCompany={cardCompany}\n          expiration={expiration}\n          ownerName={ownerName}\n          securityCode={securityCode}\n          password={password}\n          isModalOpened={isModalOpened}\n          handleCardNumbersInput={handleCardNumbersInput}\n          handleCardCompany={handleCardCompany}\n          handleExpirationInput={handleExpirationInput}\n          handleOwnerNameInput={handleOwnerNameInput}\n          handleSecurityCodeInput={handleSecurityCodeInput}\n          handlePasswordInput={handlePasswordInput}\n          handleCardInfoSubmit={handleCardInfoSubmit}\n        />\n      ) : (\n        <CardRegisterPage\n          cardCompany={cardCompany}\n          cardNumbers={cardNumbers}\n          expiration={expiration}\n          ownerName={ownerName}\n          setIsAllValid={setIsAllValid}\n          resetState={resetState}\n          setCardName={setCardName}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}