{"version":3,"sources":["components/BackButton/BackButton.js","components/Card/Card.js","components/Modal/Modal.js","components/ColorSelectButton/ColorSelectButton.js","page/CompanySelectModal/CompanySelectModal.js","components/TextButton/TextButton.js","components/Input/Input.js","components/InputContainer/InputContainer.js","page/CardAddPage/CardNumberInput.js","page/CardAddPage/CardExpirationInput.js","page/CardAddPage/CardOwnerNameInput.js","components/Tooltip/Tooltip.js","page/CardAddPage/CardSecurityCodeInput.js","page/CardAddPage/CardPasswordInput.js","utils/constant.js","page/CardAddPage/CardAddPage.js","components/UnderLineInput/UnderLineInput.js","page/CardRegisterPage/CardRegisterPage.js","utils/validator.js","page/CardListPage/CardListPage.js","App.js","index.js"],"names":["BackButton","props","onClick","className","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","protoTypes","PropTypes","func","Card","size","name","expiration","cardCompany","cardNumbers","small","middle","large","color","Object","keys","map","_","index","numbers","currentKey","repeat","length","Modal","role","aria-modal","aria-label","children","ColorSelectButton","company","data-company","포코","준","공원","로이드","티케","은현","유조","윤호","CompanySelectModal","TextButton","text","type","Input","min","max","minLength","required","value","placeholder","onChange","disabled","maxLength","InputContainer","title","bgColor","count","CardNumberInput","handleCardNumbersInput","Array","from","Fragment","e","CardExpirationInput","handleExpirationInput","month","year","CardOwnerNameInput","ownerName","handleOwnerNameInput","Tooltip","defaultTargetNode","TargetNode","content","useState","isShowTooltip","setIsShowTooltip","CardSecurityCodeInput","securityCode","handleSecurityCodeInput","src","alt","CardPasswordInput","password","handlePasswordInput","PAGE","KEY","CardAddPage","isModalOpened","setPageRouter","handleCardCompany","handleCardInfoSubmit","onSubmit","UnderLineInput","CardRegisterPage","resetState","cardName","setCardName","cards","JSON","parse","localStorage","getItem","preventDefault","setItem","stringify","target","isNumber","test","Number","CardListPage","card","App","setCardCompany","setExpiration","setOwnerName","setSecurityCode","first","second","setPassword","third","fourth","setCardNumbers","setIsModalOpened","pageRouter","useEffect","Page","key","trim","closest","dataset","category","valueAsString","String","replace","trimStart","pageTable","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29093a5a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BackButton = (props) => {\n  const { onClick } = props;\n\n  return (\n    <button className=\"w-4 h-4\" onClick={onClick}>\n      <svg width=\"17\" height=\"17\" viewBox=\"0 0 17 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M8.30426 1L1.36476 8.78658L9.15134 15.7261\" stroke=\"#525252\" strokeWidth=\"1.5\" />\n      </svg>\n    </button>\n  );\n};\n\nBackButton.protoTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default BackButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Card = (props) => {\n  const { size = 'middle', name = 'NAME', expiration, cardCompany, cardNumbers } = props;\n\n  const sizeTable = {\n    small: 'w-208 h-130',\n    middle: 'w-213 h-133',\n    large: 'w-293 h-183',\n  };\n\n  const heightTable = {\n    small: 'h-5',\n    middle: 'h-5',\n    large: 'h-10',\n  };\n\n  const changeSecurityCode = (numbers) => {\n    return '*'.repeat(numbers.length);\n  };\n\n  return (\n    <div\n      className={`${sizeTable[size]} px-4 py-2 rounded-xl bg-gray-350 ${cardCompany.color} shadow-lg font-mono tracking-wide`}\n    >\n      <span className={`${size === 'large' ? 'text-sm' : 'text-xxs'} inline-block text-black-500`}>\n        {cardCompany.name}\n      </span>\n      <div className={`w-1/5 h-1/5 ${size === 'large' ? 'mt-8' : 'mt-4'} rounded-md bg-yellow-450`}></div>\n      <ul className={`flex mt-3 text-sm ${heightTable[size]} items-center mx-1`}>\n        {Object.keys(cardNumbers).map((_, index) => {\n          const currentKey = Object.keys(cardNumbers)[index];\n          return (\n            <li\n              key={`cardNumber-${currentKey}`}\n              className={`${size === 'large' ? 'text-lg mr-9' : 'text-sm mr-3'} text-black-700 w-8`}\n            >\n              <div>{index > 1 ? changeSecurityCode(cardNumbers[currentKey]) : cardNumbers[currentKey]}</div>\n            </li>\n          );\n        })}\n      </ul>\n      <div className={`flex justify-between ${size === 'large' ? 'text-base' : 'text-xs'} text-black-700 mt-1 mx-0.5`}>\n        <div>{name}</div>\n        <div>{expiration}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n\nCard.propTypes = {\n  size: PropTypes.string,\n  name: PropTypes.string,\n  expiration: PropTypes.string,\n  cardCompany: PropTypes.object,\n  cardNumbers: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Modal = (props) => {\n  return (\n    <section\n      className=\"fixed z-10 inset-0 flex mt-5 mx-auto p-5 max-w-375 max-h-701 bg-gray-400 bg-opacity-70 rounded-3xl\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-label=\"카드사 선택 modal\"\n    >\n      <div\n        className={`absolute flex items-center p-7 rounded-3xl rounded-b-none bg-white left-0 bottom-0 \n        ${props.width || 'w-full'} ${props.height || 'h-227'}`}\n      >\n        {props.children}\n      </div>\n    </section>\n  );\n};\n\nexport default Modal;\n\nModal.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ColorSelectButton = (props) => {\n  const { company, onClick } = props;\n\n  const companyColorTable = {\n    포코: 'bg-poco',\n    준: 'bg-june',\n    공원: 'bg-park',\n    로이드: 'bg-roid',\n    티케: 'bg-tyche',\n    은현: 'bg-eunhyun',\n    유조: 'bg-yujo',\n    윤호: 'bg-yunho',\n  };\n\n  return (\n    <li className=\"mt-4 list-none\" onClick={onClick} data-company={company}>\n      <button className=\"flex flex-col items-center justify-center w-16 h-16 text-center\">\n        <div className={`w-10 h-10 rounded-full justify-center ${companyColorTable[company]}`}></div>\n        <span className=\"mt-1 text-black-700 text-xs\">{`${company} 카드`}</span>\n      </button>\n    </li>\n  );\n};\n\nexport default ColorSelectButton;\n\nColorSelectButton.propTypes = {\n  company: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../../components/Modal/Modal';\nimport ColorSelectButton from '../../components/ColorSelectButton/ColorSelectButton';\n\nconst CompanySelectModal = (props) => {\n  const { onClick } = props;\n  const cardCompanies = ['포코', '준', '공원', '로이드', '티케', '은현', '유조', '윤호'];\n\n  return (\n    <Modal>\n      <ul className=\"flex flex-wrap justify-around h-full\">\n        {cardCompanies.map((company) => (\n          <ColorSelectButton key={company} company={company} onClick={onClick} />\n        ))}\n      </ul>\n    </Modal>\n  );\n};\n\nexport default CompanySelectModal;\n\nCompanySelectModal.propTypes = {\n  onClick: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextButton = (props) => {\n  const { text, type = 'submit', color = 'text-green-350', onClick } = props;\n\n  return (\n    <button type={type} className={`absolute right-10 ${color} font-bold`} onClick={onClick}>\n      {text}\n    </button>\n  );\n};\n\nexport default TextButton;\n\nTextButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Input = (props) => {\n  const {\n    type = 'text',\n    name = '',\n    min,\n    max,\n    minLength,\n    length,\n    required = true,\n    value,\n    placeholder = '',\n    onChange,\n    className = '',\n    disabled = false,\n  } = props;\n\n  return (\n    <input\n      type={type}\n      name={name}\n      min={min}\n      max={max}\n      minLength={minLength ?? length}\n      maxLength={length}\n      placeholder={placeholder}\n      value={value}\n      className={`bg-gray-250 text-green-350 h-10 w-full text-left outline-none focus:border border-gray-400 rounded ${className}`}\n      required={required}\n      onChange={onChange}\n      disabled={disabled}\n    />\n  );\n};\n\nexport default Input;\n\nInput.propTypes = {\n  min: PropTypes.number,\n  max: PropTypes.number,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  textAlign: PropTypes.string,\n  length: PropTypes.number,\n  onChange: PropTypes.func,\n  disabled: PropTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst InputContainer = (props) => {\n  const { title, children, width, bgColor = '', count = false } = props;\n\n  return (\n    <div className=\"flex flex-col mt-5 w-full\">\n      <div className=\"flex items-center justify-between\">\n        <label className=\"text-xs\">{title}</label>\n        <span className=\"mr-1 text-xs\">{count || count === 0 ? `${count}/30` : ''}</span>\n      </div>\n      <div className={`${width} flex items-center mt-1.5 font-gray-350 ${bgColor} rounded`}>{children}</div>\n    </div>\n  );\n};\n\nexport default InputContainer;\n\nInputContainer.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element,\n};\n","import React from 'react';\nimport Input from '../../components/Input/Input';\nimport InputContainer from '../../components/InputContainer/InputContainer';\nimport PropTypes from 'prop-types';\n\nconst CardNumberInput = (props) => {\n  const { cardNumbers, handleCardNumbersInput } = props;\n\n  return (\n    <InputContainer title={'카드 번호'} bgColor={'bg-gray-250'} width={'w-full'}>\n      <>\n        {Array.from({ length: 4 }).map((_, index) => {\n          const currentKey = Object.keys(cardNumbers)[index];\n          return (\n            <React.Fragment key={`cardNumber-${currentKey}`}>\n              <Input\n                type={index > 1 ? 'password' : 'text'}\n                length={4}\n                placeholder={'0000'}\n                value={cardNumbers[currentKey]}\n                onChange={(e) => handleCardNumbersInput(e, currentKey)}\n                className={'px-3.5 text-center'}\n              />\n              {index === 3 ? '' : <span>-</span>}\n            </React.Fragment>\n          );\n        })}\n      </>\n    </InputContainer>\n  );\n};\n\nexport default CardNumberInput;\n\nCardNumberInput.propTypes = {\n  cardNumbers: PropTypes.object.isRequired,\n  handleCardNumbersInput: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport Input from '../../components/Input/Input';\nimport InputContainer from '../../components/InputContainer/InputContainer';\nimport PropTypes from 'prop-types';\n\nconst CardExpirationInput = (props) => {\n  const { expiration, handleExpirationInput } = props;\n\n  return (\n    <InputContainer title={'만료일'} width={'w-5/12'} bgColor={'bg-gray-250'}>\n      <>\n        <Input\n          placeholder={'MM'}\n          type={'number'}\n          min={1}\n          max={12}\n          value={expiration.month}\n          onChange={(e) => handleExpirationInput(e, 'month')}\n          className={'text-center pl-4'}\n        />\n        <span className=\"text-gray-400\">/</span>\n        <Input\n          placeholder={'YY'}\n          type={'number'}\n          min={21}\n          value={expiration.year}\n          onChange={(e) => handleExpirationInput(e, 'year')}\n          className={'text-center pr-4'}\n        />\n      </>\n    </InputContainer>\n  );\n};\n\nexport default CardExpirationInput;\n\nCardExpirationInput.propTypes = {\n  expiration: PropTypes.object.isRequired,\n  handleExpirationInput: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport Input from '../../components/Input/Input';\nimport InputContainer from '../../components/InputContainer/InputContainer';\nimport PropTypes from 'prop-types';\n\nconst CardOwnerNameInput = (props) => {\n  const { ownerName, handleOwnerNameInput } = props;\n\n  return (\n    <InputContainer title={'카드 소유자 이름(선택)'} bgColor={'bg-gray-250'} count={ownerName.length} width={'w-full'}>\n      <Input\n        minLength={0}\n        length={30}\n        placeholder={'카드에 표시된 이름과 동일하게 입력하세요.'}\n        value={ownerName}\n        onChange={handleOwnerNameInput}\n        required={false}\n        className={'px-4'}\n      />\n    </InputContainer>\n  );\n};\n\nexport default CardOwnerNameInput;\n\nCardOwnerNameInput.propTypes = {\n  ownerName: PropTypes.string.isRequired,\n  handleOwnerNameInput: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Tooltip = (props) => {\n  const defaultTargetNode = (\n    <button\n      type=\"button\"\n      className=\"flex items-center justify-center ml-2 w-6 h-6 text-gray-400 text-lg rounded-full focus:outline-none ring-gray-400 ring-1\"\n    >\n      ?\n    </button>\n  );\n\n  const { TargetNode = defaultTargetNode, content } = props;\n  const [isShowTooltip, setIsShowTooltip] = useState(false);\n\n  const handleToggleTooltip = () => {\n    setIsShowTooltip(!isShowTooltip);\n  };\n\n  return (\n    <div className=\"relative\">\n      <div onClick={handleToggleTooltip}>{TargetNode}</div>\n      {isShowTooltip && (\n        <div className=\"absolute left-7 top-4 w-24 bg-gray-100 rounded-2xl rounded-tl-none ring-gray-400 ring-1\">\n          {content}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Tooltip;\nTooltip.propTypes = {\n  TargetNode: PropTypes.element,\n  content: PropTypes.element.isRequired,\n};\n","import React from 'react';\nimport Input from '../../components/Input/Input';\nimport InputContainer from '../../components/InputContainer/InputContainer';\nimport Tooltip from '../../components/Tooltip/Tooltip';\nimport PropTypes from 'prop-types';\n\nconst CardSecurityCodeInput = (props) => {\n  const { securityCode, handleSecurityCodeInput } = props;\n\n  return (\n    <InputContainer title={'보안코드(CVC/CVV)'} width={'w-1/3'}>\n      <>\n        <Input\n          type={'password'}\n          length={3}\n          value={securityCode}\n          className={'px-4 text-center'}\n          onChange={handleSecurityCodeInput}\n        />\n        <Tooltip content={<img src=\"images/CVC.png\" alt=\"카드 뒷면 서명란 끝의 세자리 숫자입니다.\" />} />\n      </>\n    </InputContainer>\n  );\n};\n\nexport default CardSecurityCodeInput;\n\nCardSecurityCodeInput.propTypes = {\n  securityCode: PropTypes.string.isRequired,\n  handleSecurityCodeInput: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport Input from '../../components/Input/Input';\nimport InputContainer from '../../components/InputContainer/InputContainer';\nimport PropTypes from 'prop-types';\n\nconst CardPasswordInput = (props) => {\n  const { password, handlePasswordInput } = props;\n\n  return (\n    <InputContainer title={'카드 비밀번호'} width={'w-7/12'}>\n      <>\n        {Array.from({ length: 4 }).map((_, index) => {\n          const currentKey = Object.keys(password)[index] ?? '';\n          return (\n            <Input\n              key={index}\n              className={`mr-1.5 text-center ${index > 1 && 'bg-opacity-0'}`}\n              width={'small'}\n              type={'password'}\n              length={1}\n              name={currentKey ?? ''}\n              value={password[currentKey] ?? '*'}\n              onChange={handlePasswordInput}\n            />\n          );\n        })}\n      </>\n    </InputContainer>\n  );\n};\n\nexport default CardPasswordInput;\n\nCardPasswordInput.propTypes = {\n  password: PropTypes.object.isRequired,\n  handlePasswordInput: PropTypes.func.isRequired,\n};\n","export const PAGE = {\n  ADD: 'ADD',\n  REGISTER: 'REGISTER',\n  LIST: 'LIST',\n};\n\nexport const KEY = {\n  CARDS: 'CARDS',\n};\n","import React from 'react';\n\nimport BackButton from '../../components/BackButton/BackButton';\nimport Card from '../../components/Card/Card';\nimport CompanySelectModal from '../CompanySelectModal/CompanySelectModal';\nimport TextButton from '../../components/TextButton/TextButton';\n\nimport CardNumberInput from './CardNumberInput';\nimport CardExpirationInput from './CardExpirationInput';\nimport CardOwnerNameInput from './CardOwnerNameInput';\nimport CardSecurityCodeInput from './CardSecurityCodeInput';\nimport CardPasswordInput from './CardPasswordInput';\nimport PropTypes from 'prop-types';\nimport { PAGE } from '../../utils/constant';\n\nconst CardAddPage = (props) => {\n  const {\n    cardNumbers,\n    cardCompany,\n    expiration,\n    ownerName,\n    securityCode,\n    password,\n    isModalOpened,\n    setPageRouter,\n    handleCardNumbersInput,\n    handleCardCompany,\n    handleExpirationInput,\n    handleOwnerNameInput,\n    handleSecurityCodeInput,\n    handlePasswordInput,\n    handleCardInfoSubmit,\n  } = props;\n\n  const handleBackButton = () => {\n    setPageRouter(PAGE.LIST);\n  };\n\n  return (\n    <div className=\"p-5\">\n      <div className=\"flex items-center\">\n        <BackButton onClick={handleBackButton} />\n        <h1 className=\"ml-4 text-xl\">카드 추가</h1>\n      </div>\n\n      <div className=\"flex justify-center my-7\">\n        <Card\n          name={ownerName || 'NAME'}\n          expiration={`${expiration.month || 'MM'}/${expiration.year || 'YY'}`}\n          cardCompany={cardCompany}\n          cardNumbers={cardNumbers}\n        />\n      </div>\n\n      <form onSubmit={handleCardInfoSubmit}>\n        <CardNumberInput cardNumbers={cardNumbers} handleCardNumbersInput={handleCardNumbersInput} />\n        <CardExpirationInput expiration={expiration} handleExpirationInput={handleExpirationInput} />\n        <CardOwnerNameInput ownerName={ownerName} handleOwnerNameInput={handleOwnerNameInput} />\n        <CardSecurityCodeInput securityCode={securityCode} handleSecurityCodeInput={handleSecurityCodeInput} />\n        <CardPasswordInput password={password} handlePasswordInput={handlePasswordInput} />\n        <TextButton text={'다음'} />\n      </form>\n\n      {isModalOpened && <CompanySelectModal onClick={handleCardCompany} />}\n    </div>\n  );\n};\nexport default CardAddPage;\n\nCardAddPage.propTypes = {\n  cardNumbers: PropTypes.object.isRequired,\n  cardCompany: PropTypes.object.isRequired,\n  expiration: PropTypes.object.isRequired,\n  ownerName: PropTypes.string,\n  securityCode: PropTypes.string.isRequired,\n  password: PropTypes.object.isRequired,\n  isModalOpened: PropTypes.bool.isRequired,\n  setPageRouter: PropTypes.func.isRequired,\n  handleCardNumbersInput: PropTypes.func.isRequired,\n  handleCardCompany: PropTypes.func.isRequired,\n  handleExpirationInput: PropTypes.func.isRequired,\n  handleOwnerNameInput: PropTypes.func.isRequired,\n  handleSecurityCodeInput: PropTypes.func.isRequired,\n  handlePasswordInput: PropTypes.func.isRequired,\n  handleCardInfoSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst UnderLineInput = (props) => {\n  const { name, onChange } = props;\n\n  return (\n    <input\n      type=\"text\"\n      placeholder=\"카드 이름을 입력해주세요.\"\n      maxLength={10}\n      className=\"w-3/4 text-center border-b border-black-500 outline-none\"\n      name={name}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default UnderLineInput;\n\nUnderLineInput.propTypes = {\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import React, { useState } from 'react';\nimport Card from '../../components/Card/Card';\nimport UnderLineInput from '../../components/UnderLineInput/UnderLineInput';\nimport TextButton from '../../components/TextButton/TextButton';\nimport PropTypes from 'prop-types';\nimport { KEY } from '../../utils/constant';\n\nconst CardRegisterPage = (props) => {\n  const { cardCompany, cardNumbers, expiration, ownerName, resetState } = props;\n\n  const [cardName, setCardName] = useState('');\n\n  const cards = JSON.parse(localStorage.getItem(KEY.CARDS)) ?? [];\n\n  const handleCardName = ({ target: { value } }) => {\n    setCardName(value);\n  };\n\n  const handleCardSubmit = (e) => {\n    e.preventDefault();\n\n    localStorage.setItem(\n      KEY.CARDS,\n      JSON.stringify([...cards, { cardCompany, cardNumbers, expiration, ownerName, cardName }])\n    );\n\n    resetState();\n  };\n\n  return (\n    <form className=\"flex flex-col items-center p-5 h-full\" onSubmit={handleCardSubmit}>\n      <h1 className=\"mt-20 text-gray-600 text-2xl\">카드 등록이 완료되었습니다.</h1>\n      <div className=\"mb-10 mt-20\">\n        <Card\n          size={'large'}\n          name={ownerName || 'NAME'}\n          expiration={`${expiration.month || 'MM'}/${expiration.year || 'YY'}`}\n          cardCompany={cardCompany}\n          cardNumbers={cardNumbers}\n        />\n      </div>\n      <UnderLineInput name={'cardName'} onChange={handleCardName} />\n      <div className=\"mt-40\">\n        <TextButton text={'완료'} />\n      </div>\n    </form>\n  );\n};\n\nexport default CardRegisterPage;\n\nCardRegisterPage.propTypes = {\n  cardCompany: PropTypes.object.isRequired,\n  cardNumbers: PropTypes.object.isRequired,\n  expiration: PropTypes.object.isRequired,\n  ownerName: PropTypes.string,\n  resetState: PropTypes.func,\n};\n","export const isNumber = (value) => {\n  const numberReg = /^[0-9]/gi;\n\n  if (!numberReg.test(Number(value))) {\n    return false;\n  }\n  return true;\n};\n","import React from 'react';\nimport Card from '../../components/Card/Card';\nimport PropTypes from 'prop-types';\nimport { KEY, PAGE } from '../../utils/constant';\n\nconst CardListPage = (props) => {\n  const { setPageRouter } = props;\n\n  const cards = JSON.parse(localStorage.getItem(KEY.CARDS)) ?? [];\n\n  const handlePageRouter = () => {\n    setPageRouter(PAGE.ADD);\n  };\n\n  return (\n    <div className=\"p-5\">\n      <h1 className=\"ml-1 text-xl\">보유카드</h1>\n      <ul className=\"flex flex-col items-center mt-10\">\n        {cards.map((card, index) => (\n          <li key={index} className=\"mt-5\">\n            <Card\n              size=\"small\"\n              cardNumbers={card.cardNumbers}\n              cardCompany={card.cardCompany}\n              expiration={card.expiration.month + '/' + card.expiration.year}\n            />\n            <h2 className=\"mt-2 text-center\">{card.cardName}</h2>\n          </li>\n        ))}\n\n        <li className=\"mt-5\">\n          <div className=\"flex items-center justify-center w-208 h-130 bg-gray-350 rounded-xl\">\n            <button className=\"text-4xl\" onClick={handlePageRouter}>\n              +\n            </button>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default CardListPage;\n\nCardListPage.propTypes = {\n  setPageRouter: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport CardAddPage from './page/CardAddPage/CardAddPage';\nimport CardRegisterPage from './page/CardRegisterPage/CardRegisterPage';\nimport { isNumber } from './utils/validator';\nimport { PAGE } from './utils/constant';\nimport CardListPage from './page/CardListPage/CardListPage';\n\nfunction App() {\n  const [cardCompany, setCardCompany] = useState({ name: '', color: '' });\n  const [expiration, setExpiration] = useState({ month: '', year: '' });\n  const [ownerName, setOwnerName] = useState('');\n  const [securityCode, setSecurityCode] = useState('');\n  const [password, setPassword] = useState({\n    first: '',\n    second: '',\n  });\n  const [cardNumbers, setCardNumbers] = useState({\n    first: '',\n    second: '',\n    third: '',\n    fourth: '',\n  });\n  const [isModalOpened, setIsModalOpened] = useState(false);\n  const [pageRouter, setPageRouter] = useState(PAGE.LIST);\n\n  const resetState = () => {\n    setCardCompany({ name: '', color: '' });\n    setExpiration({ month: '', year: '' });\n    setOwnerName('');\n    setSecurityCode('');\n    setPassword({\n      first: '',\n      second: '',\n    });\n    setCardNumbers({\n      first: '',\n      second: '',\n      third: '',\n      fourth: '',\n    });\n    setIsModalOpened(false);\n    setPageRouter(PAGE.LIST);\n  };\n\n  const handleCardNumbersInput = ({ target: { value } }, key) => {\n    isNumber(value) && setCardNumbers({ ...cardNumbers, [key]: value.trim() });\n  };\n\n  const handleCardCompany = ({ target }) => {\n    const company = target.closest('li').dataset.company;\n\n    const companyColorTable = {\n      포코: 'bg-poco',\n      준: 'bg-june',\n      공원: 'bg-park',\n      로이드: 'bg-roid',\n      티케: 'bg-tyche',\n      은현: 'bg-eunhyun',\n      유조: 'bg-yujo',\n      윤호: 'bg-yunho',\n    };\n\n    setCardCompany({\n      name: `${company} 카드`,\n      color: companyColorTable[company],\n    });\n    setIsModalOpened(false);\n  };\n\n  useEffect(() => {\n    if (cardNumbers.first.length + cardNumbers.second.length === 8 && !cardCompany.name) {\n      setIsModalOpened(true);\n    }\n  }, [cardNumbers, cardCompany]);\n\n  const handleExpirationInput = ({ target: { value } }, category) => {\n    const valueAsString = String(value);\n\n    if (valueAsString.length > 2) {\n      return;\n    }\n\n    setExpiration({\n      ...expiration,\n      [category]: valueAsString.replace(/[^0-9]s/g, ''),\n    });\n  };\n\n  const handleOwnerNameInput = ({ target: { value } }) => {\n    setOwnerName(value.trimStart());\n  };\n\n  const handleSecurityCodeInput = ({ target: { value } }) => {\n    isNumber(value) && setSecurityCode(value.trim());\n  };\n\n  const handlePasswordInput = ({ target: { value, name } }) => {\n    isNumber(value) && setPassword({ ...password, [name]: value.trim() });\n  };\n\n  const handleCardInfoSubmit = (e) => {\n    e.preventDefault();\n\n    setPageRouter(PAGE.REGISTER);\n  };\n\n  const Page = {\n    CardAddPage: (\n      <CardAddPage\n        cardNumbers={cardNumbers}\n        cardCompany={cardCompany}\n        expiration={expiration}\n        ownerName={ownerName}\n        securityCode={securityCode}\n        password={password}\n        isModalOpened={isModalOpened}\n        setPageRouter={setPageRouter}\n        handleCardNumbersInput={handleCardNumbersInput}\n        handleCardCompany={handleCardCompany}\n        handleExpirationInput={handleExpirationInput}\n        handleOwnerNameInput={handleOwnerNameInput}\n        handleSecurityCodeInput={handleSecurityCodeInput}\n        handlePasswordInput={handlePasswordInput}\n        handleCardInfoSubmit={handleCardInfoSubmit}\n      />\n    ),\n\n    CardRegisterPage: (\n      <CardRegisterPage\n        cardCompany={cardCompany}\n        cardNumbers={cardNumbers}\n        expiration={expiration}\n        ownerName={ownerName}\n        resetState={resetState}\n      />\n    ),\n\n    CardListPage: <CardListPage setPageRouter={setPageRouter} />,\n  };\n\n  const pageTable = {\n    [PAGE.ADD]: Page.CardAddPage,\n    [PAGE.REGISTER]: Page.CardRegisterPage,\n    [PAGE.LIST]: Page.CardListPage,\n  };\n\n  return <div className=\"relative mt-5 mx-auto p-5 w-375 h-701 bg-white rounded-3xl\">{pageTable[pageRouter]}</div>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}